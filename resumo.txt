Para adicionar elementos:

push(): Use quando precisar adicionar elementos no final do array. É o método mais comum para adicionar elementos.
unshift(): Use quando precisar adicionar elementos no início do array. É útil quando você precisa inserir elementos em uma ordem específica.
Para remover elementos:

pop(): Use quando precisar remover o último elemento do array. É útil para remover elementos que não são mais necessários.
shift(): Use quando precisar remover o primeiro elemento do array. É útil para remover elementos que não são mais necessários, especialmente quando a ordem dos elementos é importante.
splice(): Use quando precisar remover elementos em posições específicas do array, ou quando precisar remover um número específico de elementos. É o método mais versátil para remover elementos.
Para encontrar elementos:

indexOf(): Use quando precisar encontrar a posição do primeiro elemento que corresponde a um valor específico. É útil para verificar se um elemento existe no array e para acessar elementos específicos.
lastIndexOf(): Use quando precisar encontrar a posição do último elemento que corresponde a um valor específico. É útil para encontrar a última ocorrência de um elemento em um array.
includes(): Use quando precisar verificar se um elemento existe no array, sem se preocupar com a sua posição. É útil para verificar a existência de um elemento sem precisar saber a sua posição.
Para modificar elementos:

splice(): Use quando precisar remover, adicionar ou substituir elementos em posições específicas do array. É o método mais versátil para modificar arrays.
Para ordenar elementos:

sort(): Use quando precisar ordenar os elementos do array de acordo com um critério específico. É útil para organizar dados em ordem alfabética, numérica ou de acordo com outros critérios.
Para combinar arrays:

concat(): Use quando precisar combinar dois ou mais arrays em um novo array, sem modificar os arrays originais. É útil para criar novos arrays a partir de arrays existentes.
Para converter arrays em strings:

join(): Use quando precisar transformar um array em uma string, concatenando seus elementos com um separador definido. É útil para exibir dados de um array em um formato de string.
Para criar cópias de partes de arrays:

slice(): Use quando precisar criar um novo array com uma cópia de uma parte específica do array original, sem modificar o array original. É útil para criar cópias de partes de arrays sem modificar o array original.
Para inverter a ordem dos elementos:

reverse(): Use quando precisar inverter a ordem dos elementos do array, colocando o último elemento no início e o primeiro elemento no final. É útil para inverter a ordem dos elementos de um array.
Lembre-se que a escolha do método depende do que você precisa fazer com o array. É importante entender como cada método funciona para usar os métodos de forma eficiente.

forEach(): O forEach() é como um "passeio" pelo array. Ele executa uma função para cada elemento do array, sem modificar o array original. Imagine que você precisa fazer algo com cada item do carrinho de compras, como verificar o preço ou adicionar um desconto. O forEach() é a ferramenta ideal para essa tarefa.
map(): O map() é como um "transformador" de elementos. Ele cria um novo array com os resultados da aplicação de uma função a cada elemento do array original. Imagine que você precisa criar um novo array com os preços dos itens do carrinho de compras com desconto. O map() é a ferramenta ideal para essa tarefa.
filter(): O filter() é como um "filtro" de elementos. Ele cria um novo array com os elementos que atendem a uma condição específica. Imagine que você precisa criar um novo array com os itens do carrinho de compras que são mais caros que R$ 100. O filter() é a ferramenta ideal para essa tarefa.
reduce(): O reduce() é como um "acumulador" de valores. Ele aplica uma função a cada elemento do array, acumulando um valor final. Imagine que você precisa calcular o valor total dos itens do carrinho de compras. O reduce() é a ferramenta ideal para essa tarefa.
